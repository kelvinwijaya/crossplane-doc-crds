apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    container.stack.gov.sg/instance: cstack-crossplane
  name: csdynamodbs.crd.aws.container.stack.gov.sg
spec:
  conversion:
    strategy: None
  group: crd.aws.container.stack.gov.sg
  names:
    categories:
      - cstack
      - claim
    kind: CSDynamoDb
    listKind: CSDynamoDbList
    plural: csdynamodbs
    singular: csdynamodb
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Name of the managed resource.
          jsonPath: .metadata.annotations.dynamodb/table-name
          name: Table Name
          type: string
        - description: Specifies what will happen to the underlying external when this managed resource is deleted.
          jsonPath: .spec.parameters.deletionPolicy
          name: Deletion Policy
          type: string
        - jsonPath: .status.conditions[?(@.type=='Synced')].status
          name: SYNCED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: READY
          type: string
        - jsonPath: .spec.writeConnectionSecretToRef.name
          name: CONNECTION-SECRET
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              properties:
                compositeDeletePolicy:
                  default: Background
                  enum:
                    - Background
                    - Foreground
                  type: string
                compositionRef:
                  properties:
                    name:
                      type: string
                  required:
                    - name
                  type: object
                compositionRevisionRef:
                  properties:
                    name:
                      type: string
                  required:
                    - name
                  type: object
                compositionSelector:
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  required:
                    - matchLabels
                  type: object
                compositionUpdatePolicy:
                  default: Automatic
                  enum:
                    - Automatic
                    - Manual
                  type: string
                parameters:
                  properties:
                    attributeDefinitions:
                      description: An array of attributes that describe the key schema for the table and indexes.
                      items:
                        properties:
                          attributeName:
                            type: string
                          attributeType:
                            type: string
                        type: object
                      type: array
                    billingMode:
                      description: "Controls how you are charged for read and write throughput and how you manage capacity. This setting can be changed later. \n    * PROVISIONED - We recommend using PROVISIONED for predictable workloads.    PROVISIONED sets the billing mode to Provisioned Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual). \n    * PAY_PER_REQUEST - We recommend using PAY_PER_REQUEST for unpredictable    workloads. PAY_PER_REQUEST sets the billing mode to On-Demand Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand)."
                      enum:
                        - PROVISIONED
                        - PAY_PER_REQUEST
                      type: string
                    deletionPolicy:
                      default: Orphan
                      description: Specifies whether to allow the actual Managed Resource to be deleted
                      enum:
                        - Delete
                        - Orphan
                      type: string
                    globalSecondaryIndexes:
                      description: "One or more global secondary indexes (the maximum is 20) to be created on the table. Each global secondary index in the array includes the following: \n    * IndexName - The name of the global secondary index. Must be unique only    for this table. \n    * KeySchema - Specifies the key schema for the global secondary index. \n    * Projection - Specifies attributes that are copied (projected) from the    table into the index. These are in addition to the primary key attributes    and index key attributes, which are automatically projected. Each attribute    specification is composed of: ProjectionType - One of the following: KEYS_ONLY    - Only the index and primary keys are projected into the index. INCLUDE    - Only the specified table attributes are projected into the index. The    list of projected attributes is in NonKeyAttributes. ALL - All of the    table attributes are projected into the index. NonKeyAttributes - A list    of one or more non-key attribute names that are projected into the secondary    index. The total count of attributes provided in NonKeyAttributes, summed    across all of the secondary indexes, must not exceed 100. If you project    the same attribute into two different indexes, this counts as two distinct    attributes when determining the total. \n    * ProvisionedThroughput - The provisioned throughput settings for the    global secondary index, consisting of read and write capacity units."
                      items:
                        properties:
                          indexName:
                            type: string
                          keySchema:
                            items:
                              properties:
                                attributeName:
                                  type: string
                                keyType:
                                  type: string
                              type: object
                            type: array
                          projection:
                            description: Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.
                            properties:
                              nonKeyAttributes:
                                items:
                                  type: string
                                type: array
                              projectionType:
                                enum:
                                  - KEYS_ONLY
                                  - INCLUDE
                                  - ALL
                                type: string
                            type: object
                          provisionedThroughput:
                            description: "Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the UpdateTable operation. \n For current minimum and maximum provisioned throughput values, see Service, Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide."
                            properties:
                              readCapacityUnits:
                                format: int64
                                type: integer
                              writeCapacityUnits:
                                format: int64
                                type: integer
                            type: object
                        type: object
                      type: array
                    keySchema:
                      description: "Specifies the attributes that make up the primary key for a table or an index. The attributes in KeySchema must also be defined in the AttributeDefinitions array. For more information, see Data Model (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html) in the Amazon DynamoDB Developer Guide. \n Each KeySchemaElement in the array is composed of: \n    * AttributeName - The name of this key attribute. \n    * KeyType - The role that the key attribute will assume: HASH - partition    key RANGE - sort key \n The partition key of an item is also known as its hash attribute. The term \"hash attribute\" derives from the DynamoDB usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values. \n The sort key of an item is also known as its range attribute. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value. \n For a simple primary key (partition key), you must provide exactly one element with a KeyType of HASH. \n For a composite primary key (partition key and sort key), you must provide exactly two elements, in this order: The first element must have a KeyType of HASH, and the second element must have a KeyType of RANGE. \n For more information, see Working with Tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key) in the Amazon DynamoDB Developer Guide."
                      items:
                        properties:
                          attributeName:
                            description: name of the attribute
                            type: string
                          keyType:
                            description: role of that the key will assume
                            enum:
                              - HASH
                              - RANGE
                            type: string
                        type: object
                      type: array
                    localSecondaryIndexes:
                      description: "One or more local secondary indexes (the maximum is 5) to be created on the table. Each index is scoped to a given partition key value. There is a 10 GB size limit per partition key value; otherwise, the size of a local secondary index is unconstrained. \n Each local secondary index in the array includes the following: \n    * IndexName - The name of the local secondary index. Must be unique only    for this table. \n    * KeySchema - Specifies the key schema for the local secondary index.    The key schema must begin with the same partition key as the table. \n    * Projection - Specifies attributes that are copied (projected) from the    table into the index. These are in addition to the primary key attributes    and index key attributes, which are automatically projected. Each attribute    specification is composed of: ProjectionType - One of the following: KEYS_ONLY    - Only the index and primary keys are projected into the index. INCLUDE    - Only the specified table attributes are projected into the index. The    list of projected attributes is in NonKeyAttributes. ALL - All of the    table attributes are projected into the index. NonKeyAttributes - A list    of one or more non-key attribute names that are projected into the secondary    index. The total count of attributes provided in NonKeyAttributes, summed    across all of the secondary indexes, must not exceed 100. If you project    the same attribute into two different indexes, this counts as two distinct    attributes when determining the total."
                      items:
                        properties:
                          indexName:
                            type: string
                          keySchema:
                            items:
                              properties:
                                attributeName:
                                  type: string
                                keyType:
                                  type: string
                              type: object
                            type: array
                          projection:
                            description: Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.
                            properties:
                              nonKeyAttributes:
                                items:
                                  type: string
                                type: array
                              projectionType:
                                enum:
                                  - KEYS_ONLY
                                  - INCLUDE
                                  - ALL
                                type: string
                            type: object
                        type: object
                      type: array
                    masterPasswordSecretRef:
                      properties:
                        name:
                          description: name for the masterpassword secret Reference
                          type: string
                        namespace:
                          description: namespace for the masterpassword secret Reference
                          type: string
                      type: object
                    masterUsername:
                      description: name for the master user
                      type: string
                    provisionedThroughput:
                      description: "Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the UpdateTable operation. \n If you set BillingMode as PROVISIONED, you must specify this property. If you set BillingMode as PAY_PER_REQUEST, you cannot specify this property. \n For current minimum and maximum provisioned throughput values, see Service, Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide."
                      properties:
                        readCapacityUnits:
                          format: int64
                          type: integer
                        writeCapacityUnits:
                          format: int64
                          type: integer
                      type: object
                    streamSpecification:
                      description: "The settings for DynamoDB Streams on the table. These settings consist of: \n    * StreamEnabled - Indicates whether DynamoDB Streams is to be enabled    (true) or disabled (false). \n    * StreamViewType - When an item in the table is modified, StreamViewType    determines what information is written to the table's stream. Valid values    for StreamViewType are: KEYS_ONLY - Only the key attributes of the modified    item are written to the stream. NEW_IMAGE - The entire item, as it appears    after it was modified, is written to the stream. OLD_IMAGE - The entire    item, as it appeared before it was modified, is written to the stream.    NEW_AND_OLD_IMAGES - Both the new and the old item images of the item    are written to the stream."
                      properties:
                        streamEnabled:
                          type: boolean
                        streamViewType:
                          enum:
                            - KEYS_ONLY
                            - NEW_IMAGE
                            - OLD_IMAGE
                            - NEW_AND_OLD_IMAGES
                          type: string
                      type: object
                  required:
                    - attributeDefinitions
                    - keySchema
                  type: object
                publishConnectionDetailsTo:
                  properties:
                    configRef:
                      default:
                        name: default
                      properties:
                        name:
                          type: string
                      type: object
                    metadata:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        type:
                          type: string
                      type: object
                    name:
                      type: string
                  required:
                    - name
                  type: object
                resourceRef:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                    - apiVersion
                    - kind
                    - name
                  type: object
                writeConnectionSecretToRef:
                  properties:
                    name:
                      type: string
                  required:
                    - name
                  type: object
              required:
                - parameters
              type: object
            status:
              properties:
                awsConditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time this condition transitioned from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: A Message containing details about this condition's last transition from one status to another, if any.
                        type: string
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                connectionDetails:
                  properties:
                    lastPublishedTime:
                      format: date-time
                      type: string
                  type: object
                parameters:
                  properties:
                    tableStatus:
                      description: TableStatus specifies the current state of this Dynamo Table.
                      type: string
                  type: object
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
